clc 
clear all

A=[2 3 -1 4;1 -2 6 -7]
b=[8;-3]
c=[2 3 4 7]

m=size(A,1);
n=size(A,2);

% Show error when this happens
if(n<m)
    error("n is less than m")
end

%  find combination - ncm
ncm=nchoosek(n,m);

% to make all combination
p=nchoosek(1:n,m);


sol=[]
% Now generate all basic solutions
for i=1:ncm
    y=zeros(n,1);
    A1=A(:,p(i,:));
    x=inv(A1)*b;

    % Now check whether any variable is -ve or not 
    % if -ve then reject as it is not a basic 
    if all(x>=0&x~=inf)
        y(p(i,:))=x;
        sol=[sol y];
    end
end
sol %these solutions are columnwise

z=c*sol
z
[maxz,index]=max(z)
final=sol(:,index)
fprintf('Optimal value is %i and Optimal solution is (x1,x2,x3,x4) (%f %f %f %f)',maxz,final)


GRAPHICAL MEATHOD


clc
clear
index=0
A=[1 2;3 1;4 3];
B=[40;30;60]
c=[3,3]
m=length(B)
y=0:1:max(B);
p=[0;0];
for i =1:m-1
    for j=i+1:m
        asub=A([i,j],:)
        bsub=B([i,j])
        if(det(asub)~=0)
            x=inv(asub)*bsub;
            plot(x(1),x(2),"*")
            hold on
            p=[p,x];
            index= index+1
        end
    end
end
pt=p'
number=length(pt);
index_feasible = 0;
asub=A([1:m-2],:)
bsub=B([1:m-2])
for i =1:number
    if(pt(i,:)>=0)
        pt1=pt(i,:)';
        if(asub*pt1-bsub <=0)
            index_feasible=index_feasible+1;
            feasiblepts(:,index_feasible) =pt1
            plot(pt1(1),pt1(2),'*')
            hold on
        end 
    end
end
x21=(B(1)-A(1,1)*y)/A(1,2);
x22=(B(2)-A(2,1)*y)/A(2,2);
x23=(B(3)-A(3,1)*y)/A(3,2);

x21=max(0,x21);
x22=max(0,x22);
x23=max(0,x23);

plot(y,x21,'r',y,x22,'g',y,x23,'b')
xlabel('x-axis')
ylabel('y-axis')
grid on
z=c*feasiblepts
maxima=max(z)
